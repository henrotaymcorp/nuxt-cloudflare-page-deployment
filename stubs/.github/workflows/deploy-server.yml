name: "Deploy server"

on:
  push:
    branches:
      - main
      - release/**
      - dev/**

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  prepare_variables:
    name: "Prepare variables"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Prepare terraform variables
        id: terraform_variables
        uses: henrotaym/prepare-terraform-variables-action@v3
        with:
          app_key: ${{ github.event.repository.name }}
          github_branch: ${{ github.ref }}
    outputs:
      TRUSTUP_APP_KEY: ${{ steps.terraform_variables.outputs.trustup_app_key }}
      TRUSTUP_APP_KEY_SUFFIX: ${{ steps.terraform_variables.outputs.trustup_app_key_suffix }}
      APP_URL: ${{ steps.terraform_variables.outputs.app_url }}
      APP_ENVIRONMENT: ${{ steps.terraform_variables.outputs.app_environment }}
      CLOUDFLARE_ZONE_SECRET: ${{ steps.terraform_variables.outputs.cloudflare_zone_secret }}

  deploy_doppler_config:
    name: "Deploy main config"
    runs-on: ubuntu-latest
    needs:
      - prepare_variables
    defaults:
      run:
        working-directory: devops/infrastructure/environments/main
    env:
      TF_VAR_DOPPLER_ACCESS_TOKEN_USER: "${{ secrets.DOPPLER_ACCESS_TOKEN_USER }}"
      TF_VAR_TRUSTUP_APP_KEY: "${{ needs.prepare_variables.outputs.TRUSTUP_APP_KEY }}"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
      - name: Terraform init
        run: |
          terraform init \
            -backend-config="access_key=${{ secrets.DIGITALOCEAN_SPACES_ACCESS_KEY_ID }}" \
            -backend-config="secret_key=${{ secrets.DIGITALOCEAN_SPACES_SECRET_ACCESS_KEY }}" \
            -backend-config="bucket=${{ secrets.DIGITALOCEAN_SPACES_TERRAFORM_STATES_BUCKET }}" \
            -backend-config="key=${{ needs.prepare_variables.outputs.TRUSTUP_APP_KEY }}-environments-main.tfstate"
      - name: Terraform apply
        run: terraform apply -auto-approve

  deploy_cloudflare_config:
    name: "Deploy Cloudflare page config"
    runs-on: ubuntu-latest
    needs:
      - prepare_variables
      - deploy_doppler_config
    defaults:
      run:
        working-directory: devops/infrastructure/app
    env:
      TF_VAR_DOPPLER_ACCESS_TOKEN_USER: "${{ secrets.DOPPLER_ACCESS_TOKEN_USER }}"
      TF_VAR_TRUSTUP_APP_KEY: "${{ needs.prepare_variables.outputs.TRUSTUP_APP_KEY }}"
      TF_VAR_TRUSTUP_APP_KEY_SUFFIX: "${{ needs.prepare_variables.outputs.TRUSTUP_APP_KEY_SUFFIX }}"
      TF_VAR_APP_URL: "${{ needs.prepare_variables.outputs.APP_URL }}"
      TF_VAR_APP_ENVIRONMENT: "${{ needs.prepare_variables.outputs.APP_ENVIRONMENT }}"
      TF_VAR_CLOUDFLARE_ZONE_SECRET: "${{ needs.prepare_variables.outputs.CLOUDFLARE_ZONE_SECRET }}"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
      - name: Terraform init
        run: |
          terraform init \
            -backend-config="access_key=${{ secrets.DIGITALOCEAN_SPACES_ACCESS_KEY_ID }}" \
            -backend-config="secret_key=${{ secrets.DIGITALOCEAN_SPACES_SECRET_ACCESS_KEY }}" \
            -backend-config="bucket=${{ secrets.DIGITALOCEAN_SPACES_TERRAFORM_STATES_BUCKET }}" \
            -backend-config="key=${{ needs.prepare_variables.outputs.TRUSTUP_APP_KEY }}-app.tfstate"
      - name: Terraform apply
        run: terraform apply -auto-approve
